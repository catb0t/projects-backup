
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '954EE22A79DC429CE06F75ED53192C33'
    
_lr_action_items = {'NUMBER':([0,1,6,9,10,11,12,13,],[5,5,5,5,5,5,5,5,]),'EQUALS':([2,],[9,]),'TIMES':([2,4,5,7,8,14,15,16,17,18,19,20,],[-10,11,-9,-10,-7,11,11,11,-5,-6,11,-8,]),'DIVIDE':([2,4,5,7,8,14,15,16,17,18,19,20,],[-10,12,-9,-10,-7,12,12,12,-5,-6,12,-8,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[1,1,-10,13,-9,1,-10,-7,1,1,1,1,1,13,13,-3,-5,-6,-4,-8,]),'RPAREN':([5,7,8,14,16,17,18,19,20,],[-9,-10,-7,20,-3,-5,-6,-4,-8,]),'PLUS':([2,4,5,7,8,14,15,16,17,18,19,20,],[-10,10,-9,-10,-7,10,10,-3,-5,-6,-4,-8,]),'NAME':([0,1,6,9,10,11,12,13,],[2,7,7,7,7,7,7,7,]),'$end':([2,3,4,5,7,8,15,16,17,18,19,20,],[-10,0,-2,-9,-10,-7,-1,-3,-5,-6,-4,-8,]),'LPAREN':([0,1,6,9,10,11,12,13,],[6,6,6,6,6,6,6,6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[3,]),'expression':([0,1,6,9,10,11,12,13,],[4,8,14,15,16,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',55),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',59),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',63),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',64),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',65),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',66),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',73),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',77),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',81),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',85),
]
