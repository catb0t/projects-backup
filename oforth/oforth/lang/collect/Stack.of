// *****************************************************************************
// *****************************************************************************
// Stack class : Object->Collection->List->ListBuffer->Stack
// *****************************************************************************
// *****************************************************************************
// Copyright (c) 2014, 2015 Franck Bensusan. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be found 
// in the LICENSE.TXT file.
// ****************************************************************************
// Stack is a collection that implement LIFO stacks
// You can push or pop objects onto a stack
// 
// Remark : Stack instances are mutable objects

// *****************************************************************************
// Stack definition
// *****************************************************************************
ListBuffer Class new: Stack

// *****************************************************************************
// push(aObject)
//    Push aObject on top of stack
Stack method: push { self add }

// *****************************************************************************
// pop 
//    Return the top of stack and remove it
Stack method: pop { self removeLast }

// *****************************************************************************
// top
//    Return top of the stack without removing it.
Stack method: top { self last }

// *****************************************************************************


// *****************************************************************************
// Tests
// *****************************************************************************
test: [ Stack new dup addAll(10 seq) dup pop 10 == swap size 9 == and ]

// *****************************************************************************


// *****************************************************************************
// End of Stack class
// *****************************************************************************

