// *****************************************************************************
// *****************************************************************************
// Symbol methods (Object->Collection->Buffer->String->Symbol)
// *****************************************************************************
// *****************************************************************************
// Copyright (c) 2014, 2015 Franck Bensusan. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be found 
// in the LICENSE.TXT file.
// *****************************************************************************

// A symbol is an identity string. 
//
// A symbol is created using '$' character : 
//    $AAA will return the symbol on the stack. If this symbol does not
//    exist, it is created.
//
// Two symbols with the same value are the same object and will always respond 
// true to &==
//
// Word names are symbols.

// *****************************************************************************
// Class definition
// *****************************************************************************
// String Class new: Symbol


// *****************************************************************************
// Symbol operations
// *****************************************************************************

// *****************************************************************************
// asJson
//    Return JSON representation of a symbol
Symbol method: <<Json 
   '$' <<c self << ;

// *****************************************************************************


// ****************************************************************************
// Tests
// ****************************************************************************

test: [ "dup" "dup" &= not ]
test: [ $dup $dup &= ]

// ****************************************************************************


// *****************************************************************************
// End of Symbol class
// *****************************************************************************

