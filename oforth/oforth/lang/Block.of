// ****************************************************************************
// ****************************************************************************
// Block class
// ****************************************************************************
// ****************************************************************************
// Copyright (c) 2014, 2015 Franck Bensusan. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be found 
// in the LICENSE.TXT file.
// ****************************************************************************

// A block is an anonymous function.
// A block is created using #[ ... ] syntax.
// A block object is performed using #perform

// ****************************************************************************
// Block definition
// ****************************************************************************
// Object Class new: Block


// ****************************************************************************
// Block operations
// ****************************************************************************

// ****************************************************************************
// name              ( aBlock -- aString )
//    Return block source
// Native method

// ****************************************************************************
// =>                ( aBlock NW -- )
//    Creates a function with name NW
//    When this function is called, it execute aBlock
// Native method

// ****************************************************************************
// perform           ( aBlock -- ... )
//    Perform the block object on top of stack.
// Native method

// ****************************************************************************
// Now Block can be runnable
Block is: Runnable

// ****************************************************************************
// <<                ( aStream aBlock -- aStream )
//    Send block to stream
Block method: << 
   self name << ;

// ****************************************************************************


// ****************************************************************************
// Tests
// ****************************************************************************
test: [ #[ 2 + ] name "#[ 2 + ] " == ]
test: [ 12 #[ 2 + ] perform 14 == ]
test: [ 12 #[ 1 + ] times(10) 22 == ]
test: [ 0 1 #[ tuck + ] times(10) drop 55 == ]

test: [ 
   2 #+ curry => _fblocktest
   3 _fblocktest 5 ==
   ]

// ****************************************************************************

// ****************************************************************************
// End of Block class
// ****************************************************************************

